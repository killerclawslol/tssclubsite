# Generated by Django 2.1.3 on 2018-11-11 16:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import sortedm2m.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9]+$', 'Problem code must be made of characters and/or numbers.')])),
                ('name', models.CharField(max_length=200, unique=True)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('executives', models.CharField(blank=True, help_text='The executives of the club.', max_length=400)),
                ('description', models.TextField(blank=True, help_text='A description of the club.')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'club',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]+$', 'First name must be made of characters only.')])),
                ('second_name', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]+$', 'Second name must be made of characters only.')])),
                ('self_description', models.TextField(blank=True, null=True, verbose_name='self description')),
                ('clubs', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='club_management.Club', verbose_name='club')),
                ('user_name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Username')),
            ],
            options={
                'verbose_name': 'user profile',
                'db_table': 'user_profile',
            },
        ),
    ]
